name: run-ci-script

on:
  workflow_call:
    inputs:
      runner:
        required: false
        type: string
        default: ubuntu-latest
      target:
        required: false
        type: string
        default: ''
      rustflags:
        required: false
        type: string
        default: ''
      script:
        required: false
        type: string
        default: ci/run-docker.sh
      setup_script:
        required: false
        type: string
      norun:
        required: false
        type: string
        default: ''
      verify:
        required: false
        type: string
        default: ''
      features:
        required: false
        type: string
        default: ''

jobs:
  run-ci-script:
    runs-on: ${{ inputs.runner }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Init Rustup Cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.rustup/toolchains
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/rust-toolchain') }}
      - name: Install Toolchain
        uses: dtolnay/rust-toolchain@nightly
        with:
          # FIXME: change to nightly once https://github.com/rust-lang/packed_simd/pull/350 is merged
          # needs to be kept in sync with the toolchain files
          targets: ${{ inputs.target }}
          components: rustfmt
      - name: Generate Lockfile
        run: cargo generate-lockfile
      - name: Init Cargo Cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - name: Setup
        if: ${{ inputs.setup_script != '' }}
        run: ${{ inputs.setup_script }}
        env:
          TARGET: ${{ inputs.target }}
          RUSTFLAGS: ${{ inputs.rustflags }}
          NORUN: ${{ inputs.norun }}
          VERIFY: ${{ inputs.verify }}
          FEATURES: ${{ inputs.features }}
      - name: Run CI Script
        timeout-minutes: 60
        run: ${{ inputs.script }}
        env:
          TARGET: ${{ inputs.target }}
          RUSTFLAGS: ${{ inputs.rustflags }}
          NORUN: ${{ inputs.norun }}
          VERIFY: ${{ inputs.verify }}
          FEATURES: ${{ inputs.features }}
